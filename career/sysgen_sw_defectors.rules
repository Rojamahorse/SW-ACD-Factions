Type = None
Conditions
{
	MinNodeTier = 4
}
SubSpawners
[
	{
		Type = Doodads
		Count = [1, 1]
		//Count = [6, 12]
		Distance = [20000, 28000]
		Tags = [rare_asteroid, asteroid, megaroid]
		MinDistanceFromTags = [[station, 2000], [bounty, 2000], [asteroid_field, 800], [ftl_gate, 1200]]
		//MinDistanceFromTags = [[station, 1000], [asteroid, 1000], [bounty, 1000], [ftl_gate, 1000]]
		DoodadTypes
		[
			{ Type=SW.asteroid_doonium_l;  ChanceWeight=1; }
			{ Type=SW.asteroid_zersium_m;  ChanceWeight=1; }
			{ Type=cosmoteer.asteroid_iron_m;       ChanceWeight=1; }
			{ Type=cosmoteer.asteroid_carbon_m;     ChanceWeight=0.5; }
		]	
		SubSpawners = &~/DefectorsSubSpawnersHandler
	}
	{
		Type = Doodads
		Count = [0, 1]
		//Count = 5
		Distance = [4000, 14000]
		Tags = [rare_asteroid, asteroid, megaroid]
		MinDistanceFromTags = [[station, 2000], [bounty, 2000], [asteroid_field, 800], [ftl_gate, 1200]]
		//MinDistanceFromTags = [[station, 1000], [asteroid, 1000], [bounty, 1000], [ftl_gate, 1000]]
		DoodadTypes
		[
			{ Type=SW.asteroid_doonium_l;     ChanceWeight=4/3; }
			{ Type=SW.asteroid_zersium_m;       ChanceWeight=1; }
			{ Type=cosmoteer.asteroid_iron_m;       ChanceWeight=1; }
			{ Type=cosmoteer.asteroid_carbon_m;       ChanceWeight=0.25; }
		]
		SubSpawners = &~/DefectorsSubSpawnersHandler
	}
]
DefectorsSubSpawnersHandler
[
	// Defector Ships.
	{
		Type = Ships
		Tags = [Combat]
		Count = [2, 4]
		Distance = [700, 800]
		MinDistanceFromTags = [[Combat, 60][asteroid, 60]]
		Allegiance = Unique
		SynchronizeAllegiance = true
		SpawnsPerSlice = 1
		SpawnSlicePadding = 15%
		RandomHealthRange = [100%, 100%]
		FamePerTier = &<./data/modes/career/tier_tables.rules>/StandardFamePerTier
		MaxFamePerTier = &<./data/modes/career/tier_tables.rules>/StandardMaxFamePerTier
		ShipCriteria
		{
			UseLocalFactionWeights = true
			UseTierField = true
			FleetTierRemapTable = &<./data/modes/career/fleet_tier_remap_table.rules>/FleetTierRemapTable
			AllowTierRangeExpansion = true
			UseEvenShipTypeDistribution = true
			Tags = [Combat]
		}
		AI
		{
			Type = StationGuard
			PatrolRadius = 400
			TargetAcquireRangeFromOrigin = 900
			TargetUnacquireRangeFromOrigin = 1500
			StasisSpeed = 0
		}
	}
	{
		Type = None // Asteroid field and junk and POI
		Count = 1
		Tags = [asteroid_field, sw_defectors_field]
		Radius = 1500

		SubSpawners
		[
			// ambient asteroids
			{
				Type = Doodads
				Count = [1, 3]
				DoodadTypes = [cosmoteer.megaroid_l, cosmoteer.megaroid_xl]
				Tags = [asteroid]
				Distance = [1450, (&../../../Radius)]
				RootLocation = Grandparent
				AddDistance = ParentToGrandparent
				SpawnsPerSlice = 1
				SpawnSlicePadding = 35%
				MinDistanceFromTags = [[asteroid, 120][Combat, 100]]
				NameGenerator
				{
					Type = Multi
					SubGenerators
					[
						{
							Chance = .05
							Type = NameList
							Names
							[
								"Lost"
								"Forgotten"
								"Inconspicuous"
							]
						}
						{
							Chance = .75
							Type = NameList
							Names
							[
								"Derelict"
								"Destroyed"
								"Deteriorating"
								"Orbiting"
								"Dead"
								"Floating"
								"Hidden"
								"Ruined"
								"Crumbling"
								"Shadowy"
								"Darkened"
								"Undiscovered"		
							]
						}
						{
							Chance = 1
							Type = NameList
							Names
							[
								"Hive"
								"Hideout"
							]
						}
					]
				}
			}
			// Dead Abandoned Ship
			{
				Tags = [misc_discoverable, combat, abandoned]
				Count = [3, 4]
				Distance = [500, (&../../../Radius)]
				MinDistanceFromTags
				[
					[misc_discoverable, 100]
					[asteroid, 50]
					[combat, 100]
				]
				SuppressLocationAssertions = true
				
				Type = Ships
				Allegiance = Junk
				InitToMax = false
				SpawnCrew = false
				RandomHealthRange = [25%, 100%]
				Labels = ["abandoned"]
				ShipCriteria
				{
					UseLocalFactionWeights = true
					UseTierField = true
					Tier = -2
					AllowTierRangeExpansion = true
					Tags = [combat]
				}
			}
			// Free Valuable Storage pod.
			/*{
				Tags = [misc_discoverable, storage_pod]
				Count = [3, 4]
				Distance = [600, (&../../../Radius)]
				MinDistanceFromTags
				[
					[misc_discoverable, 100]
					[asteroid, 50]
					[Defector, 100]
				]
				SuppressLocationAssertions = true
				
				Type = Ships
				Allegiance = Junk
				RandomHealthRange = [25%, 50%]
				ShipCriteria
				{
					Tags = [storage_pod]
				}

				ResourceLoadout
				[
					{ ResourceType=tristeel;         RandomWeight=1; Quantity=[10, 20]; }
					{ ResourceType=diamond;          RandomWeight=1; Quantity=[3, 2]; }
					{ ResourceType=processor;        RandomWeight=1; Quantity=[2, 3]; }
					{ ResourceType=enriched_uranium; RandomWeight=1; Quantity=[2, 7]; }
				]
			}*/
			/*{
				Type = None
				Tags = [misc_discoverable]
				Count = [6, 8]
				Distance = [600, (&../../../Radius)]
				MinDistanceFromTags
				[
					//[station, 1000]
					//[ftl_gate, 3000]
					//[ftl_beacon, 1500]
					[misc_discoverable, 100]
					[asteroid, 50]
					[Defector, 100]
				]
				SuppressLocationAssertions = true

				RandomSubSpawnerCount = 1
				SubSpawners
				[
					// Dead Abandoned Ship
					{
						Tags = [misc_discoverable, combat, abandoned]
						Count = [3, 4]
						Distance = [600, (&../../../Radius)]
						MinDistanceFromTags
						[
							[misc_discoverable, 100]
							[asteroid, 50]
							[Defector, 100]
						]
						SuppressLocationAssertions = true
						
						Type = Ships
						Allegiance = Junk
						InitToMax = false
						SpawnCrew = false
						RandomHealthRange = [25%, 100%]
						Labels = ["abandoned"]
						ShipCriteria
						{
							UseLocalFactionWeights = true
							UseTierField = true
							Tier = -2
							AllowTierRangeExpansion = true
							Tags = [combat]
						}
					}
					// Free Valuable Storage pod.
					{
						Tags = [misc_discoverable, storage_pod]
						Count = [3, 4]
						Distance = [600, (&../../../Radius)]
						MinDistanceFromTags
						[
							[misc_discoverable, 100]
							[asteroid, 50]
							[Defector, 100]
						]
						SuppressLocationAssertions = true
						
						Type = Ships
						Allegiance = Junk
						RandomHealthRange = [25%, 25%]
						ShipCriteria
						{
							Tags = [storage_pod]
						}

						ResourceLoadout
						[
							{ ResourceType=tristeel;         RandomWeight=1; Quantity=[10, 20]; }
							{ ResourceType=diamond;          RandomWeight=1; Quantity=[3, 2]; }
							{ ResourceType=processor;        RandomWeight=1; Quantity=[2, 3]; }
							{ ResourceType=enriched_uranium; RandomWeight=1; Quantity=[2, 7]; }
						]
					}
				]
			}*/
			{
				Type = Doodads
				Count = [30, 60]
				Distance = [500, (&../../../Radius)*1.1]
				Tags = [asteroid]
				RootLocation = Grandparent
				AddDistance = ParentToGrandparent
				//MinDistanceFromTags = [[station, 500], [asteroid, 50]]
				MinDistanceFromTags
				[
					[misc_discoverable, 20]
					[asteroid, 20]
					[combat, 100]
				]
				DoodadTypes = &<./data/modes/career/sysgen_asteroids.rules>/CommonAsteroidTypes
			}
			// Valuable asteroid.
			{
				Type = Doodads
				Tags = [rare_asteroid]
				RootLocation = Grandparent
				AddDistance = ParentToGrandparent
				Count = [2, 3]
				Distance = [600, (&../../../Radius)]
				MinDistanceFromTags
				[
					[misc_discoverable, 20]
					[asteroid, 20]
					[combat, 100]
				]
				DoodadTypes = &<./data/modes/career/sysgen_asteroids.rules>/RareAsteroidTypes
			}
			{ // Graveyard ships
				Type = Ships
				Count = [60, 100]
				Distance = [500, (&../../../Radius)*1.25]
				SuppressLocationAssertions = true
				Allegiance = Junk
				InitToMax = false
				SpawnCrew = false
				ShipCriteria { Tags = [wreckage] }
				MinDistanceFromTags
				[
					[wreckage, 5]
					[misc_discoverable, 5]
					[asteroid, 10]
					[combat, 10]
				]
				RandomHealthRange = [10%, 75%]
				NameGenerator = { Type=None; }
				RootLocation = Grandparent
				AddDistance = ParentToGrandparent
			}
			/*{
				Type = Doodads
				Tags = [asteroid_ring_poi, poi_unknown]
				RootLocation = Grandparent
				ScaleMode = ParentToGrandparent
				DoodadType = cosmoteer.poi_ring
				ShowOnlyInFog = true
				HideIfUnexplored = true
				Undiscovered = true
			}*/
			// POI
			{
				Type = Doodads
				DoodadType = sw.defectorsPOI
				ShowOnlyInFog = true
				Undiscovered = true
				HideIfUnexplored = true
				ScaleFactor = &../../Radius
				Tags = [asteroid_field_poi, poi_unknown, sw_defectors_field_poi]
				//AutoRemoveWhenTagDestroyed = defectors
			}
		]
	}
	// Mission to hunt defectors inside the ring
	{
		Type = Mission
		Metatype = SWSupressDefectingSquadron
		SpawnAt = Tag
		SpawnAtTag = { Mode=Nearest; Tag=trade_station; }
		Faction = OwnerOfTag
		FactionTag = &SpawnAtTag
		Objectives
		[
			{
				Type = Sequential
				SubObjectives
				[
					{
						Type = DestroyShips
						TargetsTag = { Tag=combat; LimitToBatch=true; }
						TargetAreaTag = sw_defectors_field_poi
						AutoDiscoverTargetArea = true
						OverrideDisplayFormatKey = "Objectives/EliminateDefectors"
					}
					{
						Type = ReceiveRewards
					}
				]
			}
		]
		Rewards
		[
			{
				Type = Money
				MoneyPerHighTier = &<./data/modes/career/tier_tables.rules>/StandardMoneyPerTier
				MoneyPerTierMultiplier = 4
				RoundToMultiple = 1000
			}
			{
				Type = Fame
				FamePerHighTier = &<./data/modes/career/tier_tables.rules>/StandardFamePerTier
				FamePerTierMultiplier = 3
				MaxFamePerHighTier = &<./data/modes/career/tier_tables.rules>/StandardMaxFamePerTier
			}
			{
				Type = Reputation
				ReputationPerHighTier = &<./data/modes/career/tier_tables.rules>/StandardReputationPerTier
				ReputationPerTierMultiplier = 4
			}
		]
	}
]