
// Define MapNotes in the galaxy


MapNodes
{
	Type = MapNodes
	Distance = [5, 10]
	ConnectionRadius = 10
	NameGenerator = &<../../name_generators/sw_name_celestial.rules>/CelNameGen
}

//Nebulas
SectorTypes
{
	Type = RandomSectorTypes
	SectorTypes
	[
		{
			Type = SW.basic
			RandomWeight = 1
		}
		{
			Type = binary
			RandomWeight = 0.5
		}
		{
			Type = high_density_nebula
			RandomWeight = 0.5
		}
		{
			Type = supernova
			RandomWeight = 0.5
		}
	]
}

Factions
{
	Type = Factions
	Factions
	[
		{
			FactionID = SW.Republic
			TerritoryRatio = 100%
			AvoidOtherFactionsStrength = .3
			AvoidEdgeStrength = .2
			FactionStrengthExponent = 1
			MinFactionStrength = 5%
		}
		{
			FactionID = SW.CIS
			TerritoryRatio = 100%
			AvoidOtherFactionsStrength = .3
			AvoidEdgeStrength = .2
			FactionStrengthExponent = 1
			MinFactionStrength = 5%
		} 

	]
	
	RemainderFaction = SW.Black_Sun
	TerritoryRatio = 5%
	RemainderFactionThreshold = 1
	MinRemainderFactionStrength = 5%
	AvoidIterations = 10
}

MaxTier = 18
TierSpread = 1

FactionTiers
{
	Type = FactionNodeTiers
	Factions
	[
		{
			FactionID = SW.Republic
			TierRangeLow = [1, (&~/MaxTier) - (&~/TierSpread)]
			TierRangeHigh = [1 + (&~/TierSpread), (&~/MaxTier)]
		}

		{
			FactionID = SW.CIS
			TierRangeLow = [1, (&~/MaxTier) - (&~/TierSpread)]
			TierRangeHigh = [1 + (&~/TierSpread), (&~/MaxTier)]
		}

		{
			FactionID =  SW.Black_Sun
			TierRangeLow = [1, (&~/MaxTier) - (&~/TierSpread)]
			TierRangeHigh = [1 + (&~/TierSpread), (&~/MaxTier)]
		}
	]

}

StartingNodePicker
{
	Type = StartingNodePicker
	AllowedFactions = [SW.CIS, SW.Republic] 
	MinConnections = 1
	CandidatesFarthestFromFactions = [3, [SW.Black_Sun]]
	//CandidatesClosestToFactions = [1, [SW.Republic, SW.CIS]]
	SetTierRangeTo = [1, 1 + (&~/TierSpread)]
	SetSectorTypeTo = basic //Nebulas
}

ProgressionTiers
{
	Type = ProgressionNodeTiers
	MaxLowTier = (&~/MaxTier) - (&~/TierSpread) - 1 // Leave highest tier exclusively for home systems.
	MaxChangeableLowTier = (&MaxLowTier) // Don't adjust tier of faction home systems.
	DesiredTierDeltas
	[
		{
			SourceLowTierDelta = 3
			Priority = 0 // Low priority is more important.
			HighTierSpread = &~/TierSpread
			PreferredAvailableConnections = 2
		}
		{
			SourceLowTierDelta = 1
			Priority = 0
			HighTierSpread = &~/TierSpread
			SourceLowTierRange = [1, 1] // For the tier, we want to have a nearby node at the same tier to ease the difficulty ramp.
			PreferredAvailableConnections = 1
		}
		{
			SourceLowTierDelta = 2
			Priority = 1
			HighTierSpread = &~/TierSpread
			SourceLowTierRange = [2, (&~/MaxTier)] // At subsequent tiers, we prefer to increase difficulty steadily.
		}
		{
			SourceLowTierDelta = 1
			Priority = 2
			HighTierSpread = &~/TierSpread
		}
		{
			SourceLowTierDelta = 0
			Priority = 3
			HighTierSpread = &~/TierSpread
		}
		{
			SourceLowTierDelta = -1
			Priority = 4
			HighTierSpread = &~/TierSpread
		}
		{
			SourceLowTierDelta = -1
			Priority = 4
			HighTierSpread = &~/TierSpread
		}
	]
}

