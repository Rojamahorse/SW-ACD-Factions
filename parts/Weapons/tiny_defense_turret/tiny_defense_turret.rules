Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	//IDs
	ID = SW.tiny_defense_turret
	OtherIDs = []

	//StringKeys
	NameKey = "Parts/PDTurretTiny"
	IconNameKey = "Parts/PDTurretTinyIcon"
	DescriptionKey = "Parts/PDTurretTinyDesc"
	
	//Groups&Categories
	EditorGroups = ["WeaponsEnergy","Defenses","TechI"]
	TypeCategories = [weapon, defense, point_defense]
	
	//Resources&Size&Health
	Resources
	[
		[steel, 20]
		[coil, 20]
	]
	Size = [1, 1]
	MaxHealth = 2000
	
	//Rects
	
	//Selections
	SelectionPriority = 1
	SelectionTypeByRotation = true
	PenetrationRectType = Normal
	
	//PartSpecific
	AIValue = 1
	InitialPenetrationResistance = 2
	
	//ReceivableBuffs
	//ProhibitedBy : ^/0/ProhibitedBy [tall]
	
	//Doors&Etc
//	AllowedDoorLocations
//	[
//		[-1, 0]
//		[1, 0]
//		[0, 1]
//	]
	
	//Editor
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [32, 32]
	}
	
	//Components
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 2
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			AvailableChoices = [-1, 1, 2]
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}

		FirePrefToggle
		{
			Type = UIToggle
			ToggleID = "fire_pref"
			Default = 1
		}
		FirePrefAttack
		{
			Type = ModeToggle
			Mode = FirePrefToggle
			OnModes = [0, 2]
		}
		FirePrefDefend
		{
			Type = ModeToggle
			Mode = FirePrefToggle
			OnModes = [1, 2]
		}
		AttackToggle
		{
			Type = MultiToggle
			Toggles = [AutoTargetToggle, FirePrefAttack]
			Mode = All
		}
		DefendToggle
		{
			Type = MultiToggle
			Toggles = [AutoTargetToggle, FirePrefDefend]
			Mode = All
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 2000			
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			ResupplyThreshold = 1
			DefaultPriority = &/PRIORITIES/Defense_Supply
			OperationalToggle = PowerToggle
		}

		InsideTurretGraphics
		{
			Type = Graphics
			ChainedTo = Turret
			//Location = [.5, .5]
			Rotation = 90d
			OperationalToggle = IsOperational
			OperationalDoodad
			{
				Layer = "turrets"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.1
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [1, 1]
					}
				]
			}
		}

		Graphics
		{
			Type = Graphics
			Location = [.5, .5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 1]
					}
					{
						File = "floor_33.png"
						Size = [1, 1]
					}
					{
						File = "floor_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalLighting
			{
				//ChainedTo = Turret
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [1, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "./Data/ships/terran/point_defense/walls.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/point_defense/walls_33.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/point_defense/walls_66.png"
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [1, 1]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [1, 1]
					}
				]
			}
		}
		
		Turret
		{
			Type = TurretWeapon
			Location = [.5, .5]// Relative to upper-left corner of unrotated part.
			Rotation = -90d// Relative to unrotated part.
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = 2/30 //.5
			FiringArc = 360d
			RotateSpeed = 180d
			FireThresholdAngle = 1d
			AIFirepowerRating = 150
			CanBeGivenExplicitTarget = false
			Emitter = BaseEmitter
			TargetSearchesPerSecond = 4 // Default is 2.
			HoldTargetAfterDeath = .5
			TargetPathThickness = .2// &../BulletEmitter/Bullet/Components/Physics/Radius
			EstimateFirepowerToggle = AttackToggle
			AlwaysShowCoverage = true
			AllowDirectControl = false
			FirePermissionToggle = FireModeToggle
			AutoTargetCrewSafetyDist = 8
			IgnoreSourceShipLowLOSChecks = true

			AutoTargets
			[
				{
					TargetType = Bullets
					BulletTargetCategories = [missile, mine, bullet]
					Toggle = DefendToggle
				}
				{
					TargetType = ShipParts
					Toggle = AttackToggle
					Overridable = true
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}

		}

		ReloadProgressBar
		{
			Type = ProgressBar
			ShowProgressFor = Turret
		}
		
		BaseEmitter
		{
			Type = BulletEmitter
			ChainedTo = Turret
			FireTrigger = Turret
			GetTargetFrom = Turret
			Location = [0, 0]
			OperationalToggle = IsOperational
			Bullet = &<pd_shot/pd_shot.rules>
//			Spread = [-1d, 1d]
			ResourceStorage = BatteryStorage
			ResourcesUsed = 50 //20
			MinResourcesUsed = 2
			//Burst = 2 //3
			//BurstDelay = .075
			//UseResourcePerShotInBurst = true
//			Recoil = 240
		}

		Emitter1 : BaseEmitter
		{
			Location = [1, 0] //-.25
			ChainedTo = BaseEmitter
			FireTrigger = Turret
			ResourceStorage = BatteryStorage
		}

		Emitter2 : BaseEmitter
		{
			Location = [1, 0] //.25
			ChainedTo = BaseEmitter
			FireTrigger = Turret
			ResourceStorage = BatteryStorage
		}

		FireEffect1
		{
			Type = TriggeredEffects
			ChainedTo = Emitter1
			Trigger = Emitter1
			AnchorMediaEffects = true
			Location = [0.5, 0]

			MediaEffects
			[
				&<../common_effects/particles/point_defense_shoot.rules>
				&<./Data/ships/terran/point_defense/particles/point_defense_shoot_flash.rules>

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "../common_effects/sounds/laserblaster.wav"
					Volume = .6
					Delay = .1
					SpeedVariation = .25
				}
			]
		}
		FireEffect2 : FireEffect1
		{
			Type = TriggeredEffects
			ChainedTo = Emitter2
			Trigger = Emitter2
			Location = [-0.5, 0]
			AnchorMediaEffects = true

			MediaEffects
			[
				&<../common_effects/particles/point_defense_shoot.rules>
				&<./Data/ships/terran/point_defense/particles/point_defense_shoot_flash.rules>

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "../common_effects/sounds/laserblaster.wav"
					Volume = .25
					MaxConcurrent = 10
					SpeedVariation = .25
				}
			]
		}
		
		TurretGraphics
		{
			Type = Graphics
			ChainedTo = Turret
			Location = [0, 0]
			Rotation = 90d
			OperationalToggle = IsOperational
			OperationalDoodad
			{
				Layer = "roof_turrets"
				DamageLevels
				[
					{
						File = "turret_roof.png"
						NormalsFile = "turret_normals.png"
						Size = [1, 1]
					}
					{
						File = "turret_roof_33.png"
						NormalsFile = "turret_normals_33.png"
						Size = [1, 1]
					}
					{
						File = "turret_roof_66.png"
						NormalsFile = "turret_normals_66.png"
						Size = [1, 1]
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "roof_turrets"
				DamageLevels
				[
					{
						File = "turret_roof.png"
						NormalsFile = "turret_normals.png"
						Size = [1, 1]
					}
					{
						File = "turret_roof_33.png"
						NormalsFile = "turret_normals_33.png"
						Size = [1, 1]
					}
					{
						File = "turret_roof_66.png"
						NormalsFile = "turret_normals_66.png"
						Size = [1, 1]
					}
				]
			}
		}

		BarrelSprite
		{
			Type = Sprite
			ChainedTo = Turret
			Location = [.15, 0]
			Rotation = 90d
			Layer = "roof_doodads"
			ResetAnimationTrigger = BaseEmitter
			AtlasSprite
			{
				AnimationFiles
				[
					//"barrel1.png"
					"barrels2.png"
					"barrels3.png"
					"barrels4.png"
					"barrels5.png"
					"barrels6.png"
					"barrels7.png"
					"barrels8.png"
					"barrels9.png"
					"barrels1.png"// Loop back to beginning and clamp there.
				]
				NormalsAnimationFiles
				[
					//"barrel1_normals.png"
					"barrels2_normals.png"
					"barrels3_normals.png"
					"barrels4_normals.png"
					"barrels5_normals.png"
					"barrels6_normals.png"
					"barrels7_normals.png"
					"barrels8_normals.png"
					"barrels9_normals.png"
					"barrels1_normals.png"// Loop back to beginning and clamp there.
				]
				Size = [1, 1]
				AnimationInterval = 0.01
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}

		BatterySprites
		{
			Type = ResourceSprites
			ChainedTo = Turret
			Rotation = 90d
			//Location = [.5, .5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			ResourceLevels
			[
				{
					File = "batteries1.png"
					Size = [1, 1]
				}
				{
					File = "batteries2.png"
					Size = [1, 1]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [.5, 1.5]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/SmallPartDestroyed
			Location = [.5, 1.5]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [.5, .5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 1]
		}
	}
	
	Stats
	{
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

//		MinPower = (&../StatsByCategory/0/Stats/PowerPerSecond) / 2
		RecPower = &../StatsByCategory/0/Stats/PowerPerSecond
//		MinCrew = (&MinPower) * 2
		RecCrew = (&RecPower) * 4
	}

	StatsByCategory
	[
		{
			NameKey = "StatCategories/SWPDTurretTiny"
			Stats
			{
				DamagePerShot = &~/Part/Components/BaseEmitter/Bullet/Components/Hit/HitOperational/HitEffects/0/Damage
				DamagePerSecond = (&DamagePerShot) * (&ROF)
				Damage = [&../DamagePerShot, &../DamagePerSecond]
				//Salvo = [(&~/Part/Components/BaseEmitter/Burst), (&~/Part/Components/Turret/FireInterval)]
				ROF = 1 / (&~/Part/Components/Turret/FireInterval)
				Range = &~/Part/Components/BaseEmitter/Bullet/Range
				Arc = deg(&~/Part/Components/Turret/FiringArc)
//				Spread = deg(&~/Part/Components/BaseEmitter/Spread/1)
				TurretSpeed = deg(&~/Part/Components/Turret/RotateSpeed)
				ShotSpeed = &~/Part/Components/BaseEmitter/Bullet/Speed
//				ShotHP = &~/Part/Components/BaseEmitter/Bullet/Components/Targetable/Health
				PowerPerShot = (&~/Part/Components/BaseEmitter/ResourcesUsed) / 1000
				PowerPerSecond = (&PowerPerShot) * (&ROF)
				ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
			}
		}
	]
}
