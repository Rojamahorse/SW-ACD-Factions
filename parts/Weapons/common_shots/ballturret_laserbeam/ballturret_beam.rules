/*
		BeamEmitter : <ballturret_beam.rules>
		{
			Type = BeamEmitter
			ChainedTo = Turret
			Location = [0.3, 0]
			FireTrigger = Turret
			GetTargetFrom = Turret
			Duration = 1
			ResourceStorage = BatteryStorage
			ResourcesUsed = 1250
			FireDelay = .25
			MinResourcesUsed = 1
			
			BeamMediaEffects : ^/0/BeamMediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./Data/shots/ion_beam/ion_beam_emit.wav"
					Volume = 1 * 6
					Speed = 1.8
					MaxConcurrent = 1
					MaxConcurrentVolume = 1
					RampUpTime = .25
					RampDownTime = .25
				}
			]
		}
*/


Range = 220
IdealRange = 150
Width = .15 // smaller so it fits
HitInterval = .1
HitEffectsScaleOverRange = [1, 1]
MediaEffectsScaleOverRange = [0.09, 0.09]

CrewCollisions = {Enemies=true; Junk=true}
HitCrew = &HitOperational

BeamMediaEffects
[
	// The beam itself.
	{
		Type = Beam
		BeamSprite
		{
			Texture
			{
				File = ./data/common_effects/particles/noise_gradient.png
				SampleMode = Linear
				MipLevels = max
				UVMode = Wrap
			}
			_noiseTexture
			{
				File = ./data/common_effects/particles/noise_voronoi.png
				MipLevels = max
				SampleMode = Linear
				UVMode = Wrap
			}
			Shader = "./data/shots/ion_beam/ion_beam.shader"
			_extraBeginLength = 0
			_extraEndLength = 0.25
			_sizePulseFactor = 1.2
			_sizePulseInterval = .1
			_sizePulseUOffsetFactor = -.03
			_endCapSize = 4
			Size = [100%, 3.5]
			VertexColor = [255, 255, 255, 217]
			TargetBlendMode
			{
				SourceRgbFactor = InverseDestColor
				DestRgbFactor = One
				RgbOperator = Add
				SourceAlphaFactor = One
				DestAlphaFactor = One
				AlphaOperator = Add
			}
		}
		FadeInTime = .1
		FadeOutTime = .1
		RandomTimeOffset = [0, 1]
		Bucket = IonBeam
	}

	// Beam lighting.
	{
		Type = Beam
		BeamSprite
		{
			Texture
			{
				File = "./Data/common_effects/particles/blob.png"
				MipLevels = max
				SampleMode = Linear
			}
			Shader = "./Data/common_effects/fancy_beam_light.shader"
			Size = [100%, 6]
			_extraBeginLength = (&Size/1) / 4
			_extraEndLength = (&Size/1) / 2
			VertexColor = [255, 0, 0, 255]
			_z = 0.4
			_litReflectiveStrength = 12
			_litAdditiveStrength = 0
			_unlitAdditiveStrength = 0.25
			_nrmlStrengthLimit = 1.0
			TargetBlendMode
			{
				SourceRgbFactor = InverseDestColor
				DestRgbFactor = One
				RgbOperator = Add
				SourceAlphaFactor = Zero
				DestAlphaFactor = One
				AlphaOperator = Add
			}
		}
		Bucket = Upper4
		IsLight = true
		FadeInTime = .1
		FadeOutTime = .1
	}

	: /BASE_SOUNDS/AudioExterior
	{
		Sound = "./data/shots/ion_beam/ion_beam.wav"
		Volume = 1 * 6
		MaxConcurrent = 1
		MaxConcurrentVolume = 1
		RampUpTime = .25
		RampDownTime = .25

		DynamicVolume : ^/0/DynamicVolume
		{
			UseCustomShapeForDistance = true
		}
		DynamicFilter : ^/0/DynamicFilter
		{
			UseCustomShapeForDistance = true
		}
	}
]

HitShield = &HitOperational
HitOperational
{
	HitEffects
	[
		{
			Type = Damage
			Damage = 200
		}
		{
			Type = Impulse
			Impulse = 2
			Filter
			{
				Friendlies = true
			}
		}
	]

	MediaEffects
	[
		&<./data/shots/ion_beam/particles/ion_beam_hit.rules>

		&<./data/shots/ion_beam/particles/ion_beam_hit_sparks.rules>

		&<./data/shots/ion_beam/particles/ion_beam_hit_spikes.rules>

		: /BASE_SOUNDS/AudioExterior
		{
			Sound = "./data/shots/ion_beam/ion_beam_hit.wav"
			Volume = .5 
			MaxConcurrent = 1
			MaxConcurrentVolume = 1
			RampUpTime = .25
			RampDownTime = .25
		}

		: /BASE_SHAKE
		{
			ShakeAmount = .05
			Duration = .5

			Filter
			{
				ExcludePartCategories = [ion_beam_prism]
			}
		}
	]
}

HitStructural
{
	HitEffects
	[
		{
			Type = Damage
			Damage = 100
		}
		{
			Type = Impulse
			Impulse = 1
		}
	]
}