Readme Notes on modding Cosmoteer:
DISCLAIMER: I am not a programmer, and I am not an experienced programmer. I am just a hobbyist who is trying to learn how to mod Cosmoteer. I am not responsible for any damages or problems that may arise from using this information.
Most of this information has been AI generated from the .dll files using ILSpy & by using Cody, an AI tool that utilizes ChatGPT & Claude to create embeddings in my repositories to help me search through and better understand the code.  I will eventually add this to the Cosmoteer Wiki, if it has proven useful. 

Below are my findings:

/* SHOTS */

Definition of HitEffectsScaleOverRange
The snippet you've provided from the .dll files gives you an insight into the HitEffectsScaleOverRange data field used in Cosmoteer. Here's a breakdown of the key components and what they imply for modding:

Namespaces:

using Halfling;
using Halfling.PortableHashing;
using Halfling.Serialization;
These lines indicate that the HitEffectsScaleOverRange field is using classes and methods from the Halfling library, which is a part of Cosmoteer's underlying software architecture, likely handling serialization (the process of converting an object into a stream of bytes to store the object or transmit it to memory, a database, or a file) and possibly related to security or data integrity (hashing).

Attributes:

[Serialize(Optional = true)]: This attribute specifies that the field is optional for serialization. In the context of modding, this means that you do not need to explicitly define this field in your mod files; the game will function properly without it.
[PortableHash]: This attribute likely indicates that this field is included when calculating a hash for the object, which could be important for data verification or ensuring consistency.
Field Declaration:

public Range<float> HitEffectsScaleOverRange;
This declaration reveals that HitEffectsScaleOverRange is a public field (meaning it can be accessed and modified outside of its class) and it uses a Range<float> type. Range<float> is presumably a structure or class defined either in Cosmoteer or the Halfling library, representing a range of floating-point numbers. This field likely defines a range for scaling hit effects, possibly adjusting the intensity or size of visual or auditory effects when a hit occurs in the game, based on some factor (like distance or damage).

Practical Use in Modding
When modding, if you decide to use the HitEffectsScaleOverRange field in your .rules files or other configurations:

Optional: Remember that this field is optional; if you don't specify it, the game will use default behaviors.
Value Type: Ensure that you provide a range of floating-point numbers (e.g., 0.5-1.5), which likely controls how effects scale over some variable, such as distance from the target or the range over which an effect diminishes or increases.
If you are defining custom effects or modifying existing effects for weapons or interactions in Cosmoteer and want these effects to scale under certain conditions, adjusting the HitEffectsScaleOverRange could be a powerful tool. For example, you might want a weapon's hit effects to be more pronounced at closer ranges but diminish as the range increases. This setup could be specified by configuring this field appropriately in your mod's configuration files.

/* Additional Notes: 
Scales the hit effects of the ion beam weapon over its range.
The hit effects are scaled linearly from 1 at the weapon's minimum range to 1 - (range / 1000) at the weapon's maximum range.
At range 1, the damage would be 1
At max range (300), the damage would be 1 - (300 / 1000) = 0.7 
*/

/* ExampleA: */ 
//HitEffectsScaleOverRange = [1, 0.1]
/* ExampleB: */
//HitEffectsScaleOverRange = [1, 1 - (range / 1000)]

/* FACTIONS */

